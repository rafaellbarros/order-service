import org.apache.tools.ant.filters.ReplaceTokens

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.9'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'br.com.rafaellbarros'
version = '1.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('jacksonVersion', "2.17.2")
	set('mapStructVersion', "1.6.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.14.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.data:spring-data-redis'
	implementation 'io.lettuce:lettuce-core:6.5.3.RELEASE'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'


	implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
	implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
	implementation "org.mapstruct:mapstruct:${mapStructVersion}"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

processResources {
	filesMatching(["application*.yml", "application*.yaml"]) {
		filter(ReplaceTokens, tokens: [
				"project.version": version
		], beginToken: '@', endToken: '@')
	}
}

tasks.named('test') {
	useJUnitPlatform()
}




